// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Since we're using planetscale, here's the workflow to apply migrations:
// 1. Create a new branch in planetscale
// 2. Open two terminals and keep them open:
//    - Run `pscale connect pogu-live NEW_BRANCH_NAME_HERE --port 3309`
//    - Run `pscale connect pogu-live shadow --port 3310`
// 3. Run `npx prisma db push`
// 4. Go to planetscale and open a deploy request for the new branch
// 5. Deploy the new branch then delete it
// You can now close the terminals


generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]

}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Streamer {
  id          Int          @id @default(autoincrement())
  name        String
  displayName String
  logo        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  DeletedVod  DeletedVod[]
}

model DeletedVod {
  id                       Int                        @id @default(autoincrement())
  streamId                 Int                        
  streamerId               Int
  streamer                 Streamer                   @relation(fields: [streamerId], references: [id])
  url                      String
  createdAt                DateTime                   @default(now())
  length                   Int
  Directory                Directory[]
  DirectoriesOnDeletedVods DirectoriesOnDeletedVods[]
}

model Directory {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  image                    String
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @default(now())
  DeletedVod               DeletedVod[]
  DirectoriesOnDeletedVods DirectoriesOnDeletedVods[]
}

model DirectoriesOnDeletedVods {
  id           Int        @id @default(autoincrement())
  deletedVodId Int
  directoryId  Int
  deletedVod   DeletedVod @relation(fields: [deletedVodId], references: [id])
  directory    Directory  @relation(fields: [directoryId], references: [id])
}
